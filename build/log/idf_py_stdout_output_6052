[1/11] Performing build step for 'bootloader'
[1/1] cd /home/minhnhat/esp/workspace/TrafficLightIoT/build/bootloader/esp-idf/esptool_py && /home/minhnhat/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/minhnhat/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/minhnhat/esp/workspace/TrafficLightIoT/build/bootloader/bootloader.bin
Bootloader binary size 0x6730 bytes. 0x8d0 bytes (8%) free.
[2/9] cd /home/minhnhat/esp/workspace/TrafficLightIoT/build && /home/minhnhat/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/minhnhat/esp/esp-idf/components/spiffs/spiffsgen.py 0xf0000 /home/minhnhat/esp/workspace/TrafficLightIoT/font /home/minhnhat/esp/workspace/TrafficLightIoT/build/storage.bin --page-size=256 --obj-name-len=32 --meta-len=4 --use-magic --use-magic-len
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/st7735s.c.obj
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable m5StickC.elf
[7/9] Generating binary image from built executable
esptool.py v4.5.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/minhnhat/esp/workspace/TrafficLightIoT/build/m5StickC.bin
[8/9] cd /home/minhnhat/esp/workspace/TrafficLightIoT/build/esp-idf/esptool_py && /home/minhnhat/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/minhnhat/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/minhnhat/esp/workspace/TrafficLightIoT/build/partition_table/partition-table.bin /home/minhnhat/esp/workspace/TrafficLightIoT/build/m5StickC.bin
m5StickC.bin binary size 0x3f040 bytes. Smallest app partition is 0x100000 bytes. 0xc0fc0 bytes (75%) free.
[8/9] cd /home/minhnhat/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/minhnhat/esp/esp-idf -D "SERIAL_TOOL=/home/minhnhat/.espressif/python_env/idf5.1_py3.8_env/bin/python;;/home/minhnhat/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/minhnhat/esp/workspace/TrafficLightIoT/build -P /home/minhnhat/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 m5StickC.bin 0x8000 partition_table/partition-table.bin 0x110000 storage.bin
esptool.py v4.5.dev2
Serial port /dev/ttyUSB0
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: cc:db:a7:49:e9:30
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0004ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00110000 to 0x001fffff...
Compressed 26416 bytes to 16501...
Writing at 0x00001000... (50 %)
Writing at 0x00007696... (100 %)
Wrote 26416 bytes (16501 compressed) at 0x00001000 in 0.7 seconds (effective 299.9 kbit/s)...
Hash of data verified.
Compressed 258112 bytes to 146988...
Writing at 0x00010000... (11 %)
Writing at 0x0001c21f... (22 %)
Writing at 0x000239cf... (33 %)
Writing at 0x0002a053... (44 %)
Writing at 0x0002fbc1... (55 %)
Writing at 0x00035346... (66 %)
Writing at 0x0003ba02... (77 %)
Writing at 0x000437e1... (88 %)
Writing at 0x0004925f... (100 %)
Wrote 258112 bytes (146988 compressed) at 0x00010000 in 3.4 seconds (effective 602.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 119...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (119 compressed) at 0x00008000 in 0.0 seconds (effective 634.5 kbit/s)...
Hash of data verified.
Compressed 983040 bytes to 18709...
Writing at 0x00110000... (50 %)
Writing at 0x001218fb... (100 %)
Wrote 983040 bytes (18709 compressed) at 0x00110000 in 5.7 seconds (effective 1375.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
